// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Booking {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  date       DateTime @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   User     @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
  Services   Services @relation(fields: [servicesId], references: [id])
  servicesId String   @db.ObjectId
  baber      Employee @relation(fields: [baberId], references: [id])
  baberId    String   @db.ObjectId
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  email      String     @unique
  name       String
  phone      String     @default("00-00000-0000")
  birth      DateTime
  passwd     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  booking    Booking[]
  employee   Employee[]
  typeUser   TypeUser?  @relation(fields: [typeUserId], references: [id])
  typeUserId String?    @db.ObjectId
  Shift      Shift?     @relation(fields: [shiftId], references: [id])
  shiftId    String?    @db.ObjectId

  @@map("Users")
}

model Employee {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  booking    Booking[]
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?   @unique @db.ObjectId
  typeUser   TypeUser  @relation(fields: [typeUserId], references: [id])
  typeUserId String    @db.ObjectId

  @@map("Barbers")
}

model Services {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  price       String
  description String
  duration    DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  booking     Booking[]

  @@map("Services")
}

model TypeUser {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  type      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User[]
  employee  Employee[]

  @@map("Types")
}

model Shift {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  weekDay   String
  start     String
  end       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User[]
}

model Config {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  mail_host        String
  mail_port        String
  mail_username    String
  mail_passwd      String
  mail_displayname String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
